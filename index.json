[{"content":"1. hugo 在hugo中根据指示，下载hugo, go, git.\n根据指示可以创建一个demo熟悉操作：\nhugo new your_site_name cd your_site_name hugo server 然后打开浏览器输入\u0026lt;http://localhost:1313/\u0026gt;即可浏览网站 (虽然现在什么也没有) 需要注意的是，macos下载go之后可能仍然会对相关指令报错：\ncommand not found: go 按照这个链接添加PATH即可解决\n也可以去中文站点获得更流畅的阅读体验。\n2. github pages github提供无需付费，无需备案的网站部署方案：git pages.\n为了使给给每个人的url互斥，github的解决方案是，让网站名必须与用户名完全一样。\n我们需要做的只是：\n注册一个github账号 创建一个新的仓库，名字为\u0026lt;你的用户名\u0026gt;.github.io 3. themes 接下来，可以去https://themes.gohugo.io/挑选你喜欢的主题，也可以去github搜索star数较高的。hugo的社区总体来说比较成熟。\n这里推荐两个主题： academic 适合于学术主页 PaperMode 适合于个人博客\n当选好了主题之后，要将主题应用到我们的网站上来：\n这里提供两个方案：\n1. 直接用，本人采取的就是这个 git clone \u0026lt;https/ssh of the theme\u0026gt; git submodule update --init --recursive 2. 把他当作一个主题，主要是为了防止以后想换主题 hugo new site_name cd site_name/themes git clone \u0026lt;http/ssh of the theme\u0026gt; git submodule update --init --recursive 不熟悉git操作的话可以google或者参考git command 之后，可以用命令来创建新文章\nhugo new article_name.md 这个article.md会被默认放入content文件夹中 用vscode或者其他md编辑器打开此文件后便可以快乐的写文章了 具体的工作流可以参考：workflow\n更多操作，请阅读主题的README文件进行配置\n4. 网站部署 理论上说，只要把public中的文件都push到github上即可。 由于hugo生成的site本身是一个repo，而git不允许其子文件夹public也成为一个repo，这里我提供两种解决方案：\n1. 删除site本身的.git文件(直接在图形界面操作)， 然后将public初始化为git仓库并与\u0026lt;你的用户名\u0026gt;.github.io连接： cd name_of_your_site hugo cd public git remote add origin \u0026lt;ssh or https of your repo\u0026gt; 这里推荐使用ssh，原因是可以自行配置（具体自己查）使得不用每次都输入密码 2. 使\u0026lt;你的用户名\u0026gt;.github.io成为site的submodule，详见 \u0026lt;https://www.atlassian.com/git/tutorials/git-submodule\u0026gt; cd name_of_your_site git submodule add -f -b master \u0026lt;https or ssh of your repo\u0026gt; public 如果想要更方便一点的话，建议选择第一种方案。 接下来要将hugo生成的本地文件\n1. 如果你用的是第一种方案 cd name_of_your_site/public git push 2. 如果你是第二种 cd name_of_your_site git add --all git commit -m \u0026#34;write something\u0026#34; git push 之后打开https://你的用户名.github.io欣赏你自己的博客了 如果404，请清除浏览器缓存。\n","permalink":"https://lysandert.github.io/posts/blog/blog_setup/","summary":"1. hugo 在hugo中根据指示，下载hugo, go, git. 根据指示可以创建一个demo熟悉操作： hugo new your_site_name cd your_site_name hugo server 然后打开浏览器输入\u0026lt;http://localhost:1313/\u0026gt;即可浏览网站 (虽然现在什么也没有) 需要注意的是，macos下载go之后可能仍然会对相关指令报错： command not found: go 按","title":"【个人网站搭建】hugo + github pages"},{"content":"1.新建文档 新建 markdown文档 类型：blog/research/read/life\ncd ~/Documents/myBlogs hugo new ports/blog/\u0026lt;article_name\u0026gt;.md 2. 写作 打开vsc进行md编辑，实时渲染。\n也可以在用热键command+S保存后在bash中输入：\nhugo server -D 在浏览器中打开 http://localhost:1313/ 即可在本地浏览博客生成情况\n写作完毕后，记得添加tags方便查询与归档\n3. 上传remote cd myBlogs hugo -F --cleanDestinationDir cd public git add . git commit -m \u0026#34;sth“ git push 文章会自动上传到 http://lysandert.github.io\n","permalink":"https://lysandert.github.io/posts/blog/blog_workflow/","summary":"1.新建文档 新建 markdown文档 类型：blog/research/read/life cd ~/Documents/myBlogs hugo new ports/blog/\u0026lt;article_name\u0026gt;.md 2. 写作 打开vsc进行md编辑，实时渲染。 也可以在用热键command+S保存后在bash中输入： hugo server -D 在浏览器中打开 http://localhost:1313/ 即可在本地浏览博客生成情况 写作完毕后，记得添加tags方便查询与","title":"Blog Workflow"},{"content":"basic initialize local repository\ngit init make untracked file tracked\ngit add [file] git add . # add all commit changes\ngit commit -m \u0026quot;message\u0026quot; view current information about git\ngit status remote repository set a new remote repo\ngit remote add origin [https or ssh] # origin is the default name of remote repo view current remote repo\ngit remote -v change url\ngit remote set-url [https or ssh] 拉取远程仓库\ngit pull git pull origin master \u0026gt;\u0026gt;\u0026gt; Already up to date. upload\ngit push -u origin master # first time git push origin master git push ","permalink":"https://lysandert.github.io/posts/blog/git_command/","summary":"basic initialize local repository git init make untracked file tracked git add [file] git add . # add all commit changes git commit -m \u0026quot;message\u0026quot; view current information about git git status remote repository set a new remote repo git remote add origin [https or ssh] # origin is the default name of remote repo view current remote repo git remote -v change url git remote set-url [https or ssh] 拉取远程仓库 git pull git pull origin master \u0026gt;\u0026gt;\u0026gt; Already up to date. upload git push -u origin master # first time git push origin master git push","title":"Git Command"},{"content":"","permalink":"https://lysandert.github.io/posts/research/research1/","summary":"","title":"Research1"},{"content":"","permalink":"https://lysandert.github.io/posts/life/life/","summary":"","title":"Life"},{"content":"","permalink":"https://lysandert.github.io/posts/read/read/","summary":"","title":"Read"},{"content":"\u0026lt;div\u0026gt; 科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 \u0026lt;/div\u0026gt; ","permalink":"https://lysandert.github.io/posts/research/research/","summary":"\u0026lt;div\u0026gt; 科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代","title":"Research1"},{"content":" Lysander\u0026#39;s Blog 一个记录技术、阅读、生活的博客 👉友链格式 名称： Lysander\u0026rsquo;s Blog 网址： https://lysandert.github.io 图标： https://lysandert.github.io/img/cai.gif 描述： 一个记录技术、阅读、生活的博客 👉友链申请要求 秉承互换友链原则、文章定期更新、不能有太多广告、个人描述字数控制在15字内\n👉Hugo博客交流群 ????????\n","permalink":"https://lysandert.github.io/links/","summary":"Lysander\u0026#39;s Blog 一个记录技术、阅读、生活的博客 👉友链格式 名称： Lysander\u0026rsquo;s Blog 网址： https://lysandert.github.io 图标： https://lysandert.github.io/img/cai.gif 描述： 一个记录技术、阅读、生活的博客 👉友链申请要求 秉承互换友链原则、文章定期更新、不能有太多广告、个人描述字数控制在15字内 👉Hugo博客交流群 ????????","title":"🤝友链"},{"content":"关于我\n英文名: Lysander 职业: 在读大二学生 爱好: 乒乓球、围棋、羽毛球 ","permalink":"https://lysandert.github.io/about/","summary":"关于我 英文名: Lysander 职业: 在读大二学生 爱好: 乒乓球、围棋、羽毛球","title":"🙋🏻‍♂️关于"}]