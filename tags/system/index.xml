<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>system on Lysander&#39;s Blog</title>
    <link>https://lysandert.github.io/tags/system/</link>
    <description>Recent content in system on Lysander&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 23 Jan 2023 20:22:16 +0800</lastBuildDate><atom:link href="https://lysandert.github.io/tags/system/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>进程与线程</title>
      <link>https://lysandert.github.io/posts/blog/%E8%BF%9B%E7%A8%8B%E4%B8%8E%E7%BA%BF%E7%A8%8B/</link>
      <pubDate>Mon, 23 Jan 2023 20:22:16 +0800</pubDate>
      
      <guid>https://lysandert.github.io/posts/blog/%E8%BF%9B%E7%A8%8B%E4%B8%8E%E7%BA%BF%E7%A8%8B/</guid>
      <description>进程与线程 进程 Process 进程的状态 运行状态（Running）：该时刻进程占用 CPU； 就绪状态（Ready）：可运行，由于其他进程处于运行状态而暂时停止运行； 阻塞状态（Blocked）：该进程正在等待某一事件发生（如等待输入/输出操作的完成）而暂时停止运行，这时，即使给它CPU控制权，它也</description>
    </item>
    
    <item>
      <title>计算机硬件结构</title>
      <link>https://lysandert.github.io/posts/blog/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A1%AC%E4%BB%B6%E7%BB%93%E6%9E%84/</link>
      <pubDate>Thu, 12 Jan 2023 17:30:43 +0800</pubDate>
      
      <guid>https://lysandert.github.io/posts/blog/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A1%AC%E4%BB%B6%E7%BB%93%E6%9E%84/</guid>
      <description>硬件结构 冯诺伊曼模型 运算器ALU 控制器Control Unit 存储器Memory Unit 输入输出设备 I/O devices 内存 线性存储，基本单位字节(Byte)，每一个字节对应一个内存地址（从0开始编号，最后一个地址是内存总字节数-1）。 1 Byte = 8 bit CPU 控制单元Control Unit 逻辑运算单元ALU 寄存器Accumul</description>
    </item>
    
    <item>
      <title>Linux内存管理</title>
      <link>https://lysandert.github.io/posts/blog/linux%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/</link>
      <pubDate>Wed, 17 Aug 2022 20:19:18 +0800</pubDate>
      
      <guid>https://lysandert.github.io/posts/blog/linux%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/</guid>
      <description>内存管理 虚拟内存 操作系统引入了虚拟内存的概念 程序所使用的内存地址叫做虚拟内存地址（Virtual Memory Address） 实际存在硬件里面的空间地址叫物理内存地址（Physical Memory Address）。 内存分段 Segmentation driven: 用户执行的程序（虚拟内存中），在物理内存中找一块地方放（段的大小不固定） 虚拟</description>
    </item>
    
  </channel>
</rss>
